version: "3"
services:
  search:
    image: orionsearch/search-engine:0.0.1
    container_name: search
    ports:
      - "6666:5000"
    environment:
      MODEL_FAISS: ${SEARCH_ENGINE_MODEL_FAISS}
      MODEL_SVD: ${SEARCH_ENGINE_MODEL_SVD}
      MODEL_TFIDF: ${SEARCH_ENGINE_MODEL_TFIDF}
    restart: always
  airflow:
    container_name: airflow
    build:
      context: ./orion
      dockerfile: Dockerfile
      args:
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
    env_file:
      - orion/.env
      - .env
    ports:
      - "8080:8080"
    restart: always
  # frontend:
  #   container_name: frontend
  #   restart: always
  #   depends_on: graphql
  #   environment: REACT_APP_HASURA_GRAPHQL_URL=localhost:${HASURA_HOST}/v1/graphql
  # caddy:
  #   image: abiosoft/caddy:0.11.0
  #   container_name: caddy
  #   depends_on:
  #     - graphql
  #   restart: always
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #   volumes:
  #     - ./Caddyfile:/etc/Caddyfile
  #     - caddy_certs:/root/.caddy
  # graphql:
  #   image: hasura/graphql-engine:v1.0.0-alpha45
  #   container_name: graphql
  #   restart: always
  #   depends_on:
  #     - postgres
  #   networks:
  #     - artemis
  #   expose:
  #     - ${HASURA_PORT}
  #   environment:
  #     HASURA_GRAPHQL_DATABASE_URL: postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
  #     HASURA_GRAPHQL_ACCESS_KEY: ${HASURA_SECRET_KEY}
  #     HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GUI}
  #     HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key":"${JWT_SECRET_KEY}"}'
  #   command:
  #     - graphql-engine
  #     - serve
  # postgres:
  #   image: postgres:12.2
  #   container_name: postgres
  #   restart: always
  #   expose:
  #     - ${DB_PORT}
  #   environment:
  #     POSTGRES_DB: ${DB_NAME}
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASS}
